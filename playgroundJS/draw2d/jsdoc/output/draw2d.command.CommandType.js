Ext.data.JsonP.draw2d_command_CommandType({"extends":null,"component":false,"meta":{"author":["Andreas Herz"]},"linenr":3,"inheritdoc":null,"inheritable":null,"mixedInto":[],"aliases":{},"singleton":false,"mixins":[],"parentMixins":[],"statics":{"cfg":[],"property":[],"css_var":[],"method":[],"event":[],"css_mixin":[]},"files":[{"href":"CommandType.html#draw2d-command-CommandType","filename":"CommandType.js"}],"superclasses":[],"members":{"cfg":[],"property":[],"css_var":[],"method":[{"meta":{},"owner":"draw2d.command.CommandType","name":"constructor","id":"method-constructor","tagname":"method"},{"meta":{},"owner":"draw2d.command.CommandType","name":"getPolicy","id":"method-getPolicy","tagname":"method"}],"event":[],"css_mixin":[]},"alternateClassNames":[],"override":null,"private":null,"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/CommandType.html#draw2d-command-CommandType' target='_blank'>CommandType.js</a></div></pre><div class='doc-contents'><p>EditPolicies should determine an Figures editing capabilities.\nIt is possible to implement an Figure such that it handles all editing\nresponsibility.<br>\nHowever, it is much more flexible and object-oriented to use\nEditPolicies. Using policies, you can pick and choose the editing behavior for\nan Figure without being bound to its class hierarchy. Code reuse is increased,\nand code management is easier.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='draw2d.command.CommandType'>draw2d.command.CommandType</span><br/><a href='source/CommandType.html#draw2d-command-CommandType-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/draw2d.command.CommandType-method-constructor' class='name expandable'>draw2d.command.CommandType</a>( <span class='pre'>policy</span> ) : <a href=\"#!/api/draw2d.command.CommandType\" rel=\"draw2d.command.CommandType\" class=\"docClass\">draw2d.command.CommandType</a></div><div class='description'><div class='short'>Create a new edit policy object ...</div><div class='long'><p>Create a new edit policy object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>policy</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/draw2d.command.CommandType\" rel=\"draw2d.command.CommandType\" class=\"docClass\">draw2d.command.CommandType</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getPolicy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='draw2d.command.CommandType'>draw2d.command.CommandType</span><br/><a href='source/CommandType.html#draw2d-command-CommandType-method-getPolicy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/draw2d.command.CommandType-method-getPolicy' class='name expandable'>getPolicy</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Return the String representation of the policy ...</div><div class='long'><p>Return the String representation of the policy</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","name":"draw2d.command.CommandType","uses":[],"html_meta":{"author":null},"id":"class-draw2d.command.CommandType","tagname":"class","enum":null,"subclasses":[],"requires":[]});