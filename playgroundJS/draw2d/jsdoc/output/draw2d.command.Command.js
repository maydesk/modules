Ext.data.JsonP.draw2d_command_Command({"extends":null,"component":false,"meta":{"author":["Andreas Herz"]},"linenr":2,"inheritdoc":null,"inheritable":true,"mixedInto":[],"aliases":{},"singleton":false,"mixins":[],"parentMixins":[],"statics":{"cfg":[],"property":[],"css_var":[],"method":[],"event":[],"css_mixin":[]},"files":[{"href":"Command.html#draw2d-command-Command","filename":"Command.js"}],"superclasses":[],"members":{"cfg":[],"property":[],"css_var":[],"method":[{"meta":{},"owner":"draw2d.command.Command","name":"constructor","id":"method-constructor","tagname":"method"},{"meta":{},"owner":"draw2d.command.Command","name":"canExecute","id":"method-canExecute","tagname":"method"},{"meta":{"template":true},"owner":"draw2d.command.Command","name":"cancel","id":"method-cancel","tagname":"method"},{"meta":{"template":true},"owner":"draw2d.command.Command","name":"execute","id":"method-execute","tagname":"method"},{"meta":{},"owner":"draw2d.command.Command","name":"getLabel","id":"method-getLabel","tagname":"method"},{"meta":{"template":true},"owner":"draw2d.command.Command","name":"redo","id":"method-redo","tagname":"method"},{"meta":{"template":true},"owner":"draw2d.command.Command","name":"undo","id":"method-undo","tagname":"method"}],"event":[],"css_mixin":[]},"alternateClassNames":[],"override":null,"private":null,"html":"<div><pre class=\"hierarchy\"><h4>Subclasses</h4><div class='dependency'><a href='#!/api/draw2d.command.CommandAdd' rel='draw2d.command.CommandAdd' class='docClass'>draw2d.command.CommandAdd</a></div><div class='dependency'><a href='#!/api/draw2d.command.CommandCollection' rel='draw2d.command.CommandCollection' class='docClass'>draw2d.command.CommandCollection</a></div><div class='dependency'><a href='#!/api/draw2d.command.CommandConnect' rel='draw2d.command.CommandConnect' class='docClass'>draw2d.command.CommandConnect</a></div><div class='dependency'><a href='#!/api/draw2d.command.CommandDelete' rel='draw2d.command.CommandDelete' class='docClass'>draw2d.command.CommandDelete</a></div><div class='dependency'><a href='#!/api/draw2d.command.CommandMove' rel='draw2d.command.CommandMove' class='docClass'>draw2d.command.CommandMove</a></div><div class='dependency'><a href='#!/api/draw2d.command.CommandReconnect' rel='draw2d.command.CommandReconnect' class='docClass'>draw2d.command.CommandReconnect</a></div><div class='dependency'><a href='#!/api/draw2d.command.CommandResize' rel='draw2d.command.CommandResize' class='docClass'>draw2d.command.CommandResize</a></div><h4>Files</h4><div class='dependency'><a href='source/Command.html#draw2d-command-Command' target='_blank'>Command.js</a></div></pre><div class='doc-contents'><p>Commands are passed around throughout editing. They are used to encapsulate and combine\nchanges to the application's model. An application has a single command stack. Commands must\nbe executed using the command stack rather than directly calling execute.</p>\n\n<br> \n\n\n<p>This is requried for a deneric support for the undo/redo concept within draw2d.<br></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='draw2d.command.Command'>draw2d.command.Command</span><br/><a href='source/Command.html#draw2d-command-Command-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/draw2d.command.Command-method-constructor' class='name expandable'>draw2d.command.Command</a>( <span class='pre'>label</span> ) : <a href=\"#!/api/draw2d.command.Command\" rel=\"draw2d.command.Command\" class=\"docClass\">draw2d.command.Command</a></div><div class='description'><div class='short'>Create a new Command objects which can be execute via the CommandStack. ...</div><div class='long'><p>Create a new Command objects which can be execute via the CommandStack.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>label</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/draw2d.command.Command\" rel=\"draw2d.command.Command\" class=\"docClass\">draw2d.command.Command</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-canExecute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='draw2d.command.Command'>draw2d.command.Command</span><br/><a href='source/Command.html#draw2d-command-Command-method-canExecute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/draw2d.command.Command-method-canExecute' class='name expandable'>canExecute</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Returns [true] if the command can be execute and the execution of the\ncommand modifies the model. ...</div><div class='long'><p>Returns [true] if the command can be execute and the execution of the\ncommand modifies the model. e.g.: a CommandMove with [startX,startX] == [endX,endY] should\nreturn false. Rhe execution of this Command doesn't modify the model.</p>\n</div></div></div><div id='method-cancel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='draw2d.command.Command'>draw2d.command.Command</span><br/><a href='source/Command.html#draw2d-command-Command-method-cancel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/draw2d.command.Command-method-cancel' class='name expandable'>cancel</a>( <span class='pre'></span> )<strong class='template signature' >template</strong></div><div class='description'><div class='short'>Will be called if the user cancel the operation. ...</div><div class='long'><p>Will be called if the user cancel the operation.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-execute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='draw2d.command.Command'>draw2d.command.Command</span><br/><a href='source/Command.html#draw2d-command-Command-method-execute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/draw2d.command.Command-method-execute' class='name expandable'>execute</a>( <span class='pre'></span> )<strong class='template signature' >template</strong></div><div class='description'><div class='short'>Execute the command the first time. ...</div><div class='long'><p>Execute the command the first time.\nSup-classes must implement this method.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-getLabel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='draw2d.command.Command'>draw2d.command.Command</span><br/><a href='source/Command.html#draw2d-command-Command-method-getLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/draw2d.command.Command-method-getLabel' class='name expandable'>getLabel</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Returns a label of the Command. ...</div><div class='long'><p>Returns a label of the Command. e.g. \"move figure\".</p>\n\n<p>@final</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the label for this command</p>\n</div></li></ul></div></div></div><div id='method-redo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='draw2d.command.Command'>draw2d.command.Command</span><br/><a href='source/Command.html#draw2d-command-Command-method-redo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/draw2d.command.Command-method-redo' class='name expandable'>redo</a>( <span class='pre'></span> )<strong class='template signature' >template</strong></div><div class='description'><div class='short'>Redo the command after the user has undo this command. ...</div><div class='long'><p>Redo the command after the user has undo this command.\nSup-classes must implement this method.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-undo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='draw2d.command.Command'>draw2d.command.Command</span><br/><a href='source/Command.html#draw2d-command-Command-method-undo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/draw2d.command.Command-method-undo' class='name expandable'>undo</a>( <span class='pre'></span> )<strong class='template signature' >template</strong></div><div class='description'><div class='short'>Undo the command. ...</div><div class='long'><p>Undo the command.\nSup-classes must implement this method.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div></div></div></div></div>","name":"draw2d.command.Command","uses":[],"html_meta":{"author":null},"id":"class-draw2d.command.Command","tagname":"class","enum":null,"subclasses":["draw2d.command.CommandAdd","draw2d.command.CommandCollection","draw2d.command.CommandConnect","draw2d.command.CommandDelete","draw2d.command.CommandMove","draw2d.command.CommandReconnect","draw2d.command.CommandResize"],"requires":[]});